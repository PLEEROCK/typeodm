import {defaultMetadataStorage} from "../metadata-builder/MetadataStorage";
import {WrongAnnotationUsageException} from "./exception/WrongAnnotationUsageException";

/**
 * For the fields that has this annotation will be generated a date when the document will be saved to the database
 * at first time. Please note that this will work only in the case if repository#persist method is used to save document.
 */
export function CreateDateField(name?: string) {
    return function (object: Object, propertyName: string) {

        if (!object || !propertyName || !object.constructor)
            throw new WrongAnnotationUsageException('CreateDate', 'class property', object);

        defaultMetadataStorage.addFieldMetadata({
            object: object,
            name: name ? <string> name : undefined,
            type: type => 'date',
            isId: false,
            isAutoGenerated: false,
            isCreateDate: true,
            isUpdateDate: false,
            isArray: false,
            propertyName: propertyName
        });
    };
}